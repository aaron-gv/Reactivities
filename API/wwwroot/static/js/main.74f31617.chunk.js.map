{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/Activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/Activities/dashboard/ActivityListItemAttendee.tsx","features/Activities/dashboard/ActivityListItem.tsx","features/Activities/dashboard/ActivityList.tsx","features/Activities/dashboard/ActivityListItemPlaceholder.tsx","features/Activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationsErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/Activities/form/ActivityForm.tsx","features/Activities/details/ActivityDetailedChat.tsx","features/Activities/details/ActivityDetailedHeader.tsx","features/Activities/details/ActivityDetailedInfo.tsx","features/Activities/details/ActivityDetailedSidebar.tsx","features/Activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","paginParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","loadUserActivities","setDisplayName","photo","photos","isMain","setImage","p","activityStore","followingCount","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","LoginForm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","RegisterForm","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","ServerError","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.74f31617.chunk.js","sourcesContent":["export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor (data: T, pagination: Pagination) {\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\n\nexport class PagingParams {\n    pageNumber ;\n    pageSize ;\n\n    constructor(pageNumber = 1, pageSize=2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === 'development')\r\n        await sleep(1000);\r\n\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?\r\npredicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n  }\r\n\r\n  export class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n      Object.assign(this, init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n      if (activity) {\r\n        this.id = activity.id;\r\n        this.title = activity.title;\r\n        this.category = activity.category;\r\n        this.description = activity.description;\r\n        this.date = activity.date;\r\n        this.city = activity.city;\r\n        this.venue = activity.venue;\r\n\r\n      }\r\n    }\r\n  }","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    photos?: Photo[];\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n   }","import { format } from \"date-fns\";\r\nimport {  makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        );\r\n    }\r\n\r\n    setPagingParams = (paginParams: PagingParams) => {\r\n        this.pagingParams = paginParams;\r\n    }\r\n\r\n    get axiosParams () {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('PageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        });\r\n        return params;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            });\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all' , true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]}\r\n    ))}\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n         try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                    this.setActivity(activity);\r\n                })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n         } catch (error) {\r\n             console.log(error);\r\n                this.setLoadingInitial(false);\r\n         }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n    \r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                \r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some (\r\n                a => a.username === user.username\r\n            );\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n\r\n    }\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues)  => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        \r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity};\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n                \r\n                \r\n                \r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n      console.log(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n      console.log(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) {\n      this.user.image = image;\n    }\n  };\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  };\n}\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(), \r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token)\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        );\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;   \n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal : Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n    constructor () {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId : string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    });\n                    this.comments = comments;\n                })\n            });\n\n            this.hubConnection.on('ReceiveComments', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment);\n                })\n            });\n\n            \n        }\n    }\n    \n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\nexport default observer(function NavBar() {\r\n    const {userStore: {user, logout}} = useStore();\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt =\"logo\" style={{marginRight: 10}} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                        \r\n                    </Dropdown> \r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n    const {activityStore: {predicate, setPredicate}} = useStore();\n\n    return (\n        <Fragment>\n            <Menu vertical size='large' style={{width:'100%', marginTop: 25}}>\n                <Header icon='filter' attached color='teal' content='Filters' />\n                <Menu.Item content='All Activities'\n                    active={predicate.has('all')}\n                    onClick={() => setPredicate('all', 'true')} \n                />\n                <Menu.Item content='Im going' \n                    active={predicate.has('isGoing')}\n                    onClick={() => setPredicate('isGoing', 'true')} \n                />\n                <Menu.Item content='Im hosting' \n                    active={predicate.has('isHost')}\n                    onClick={() => setPredicate('isHost', 'true')} \n                    />\n            </Menu>\n        \n        <Header />\n        <Calendar \n            onChange = {(date) => setPredicate('startDate', date as Date)}\n            value={predicate.get('startDate') || new Date()}\n        />\n        </Fragment>\n    )\n});","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n    const {profileStore, userStore} = useStore();\n    const {updateFollowing, loading} = profileStore;\n\n    if (userStore.user?.username === profile.username) return null;\n\n    function handleFollow(e: SyntheticEvent, username: string) {\n        e.preventDefault();\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n    }\n\n  return (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button \n            fluid \n            color='teal' \n            content={profile.following ? 'Following' : 'Not following'}\n             />\n\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\ninterface Props {\n  profile: Profile;\n}\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n    attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees} : Props) {\n    const styles = {\n        borderColor: 'orange',\n        borderWidth: 3\n    }\n    return (\n        <List horizontal>\n            {\n                attendees.map(attendee => (\n                    <Popup \n                        hoverable\n                        key={attendee.username}\n                        trigger={\n                            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}> \n                                <Image size='mini' bordered style={attendee.following ? styles : null} circular src={attendee.image || '/assets/user.png'} />\n                            </List.Item>\n                        } \n                    >\n                        <Popup.Content>\n                            <ProfileCard profile={attendee} />\n                        </Popup.Content>\n                    </Popup>\n                    \n                ))\n            }\n        </List>\n    )\n})","import { format } from \"date-fns\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n    activity: Activity\n}\n\nexport default function ActivityListItem({activity}: Props) {\n \n  return (\n   <Segment.Group>\n       <Segment>\n           {activity.isCancelled && \n           <Label  attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />}\n           <Item.Group>\n               <Item>\n                   <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\n                   <Item.Content>\n                       <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                           {activity.title}\n                       </Item.Header>\n                       <Item.Description>\n                           Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\n                       </Item.Description>\n                        {activity.isHost && (\n                            <Item.Description>\n                                <Label basic color='orange'>\n                                    You are hosting this activity\n                                </Label>\n                            </Item.Description>\n                        )}\n                        {activity.isGoing && !activity.isHost && (\n                            <Item.Description>\n                                <Label basic color='orange'>\n                                    You are going to this activity\n                                </Label>\n                            </Item.Description>\n                        )}\n                   </Item.Content>\n               </Item>\n           </Item.Group>\n       </Segment>\n       <Segment>\n           <span>\n               <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n               <Icon name='marker' /> {activity.venue}\n           </span>\n       </Segment>\n       <Segment secondary>\n            <ActivityListItemAttendee attendees={activity.attendees!} />\n       </Segment>\n       <Segment clearing>\n           <span>\n               {activity.description}\n           </span>\n           <Button as={Link} to={`/activities/${activity.id}`} color='teal' floated='right' content='View' />\n       </Segment>\n\n   </Segment.Group>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer( function ActivityDashboard() {\r\n  const {activityStore} = useStore();\r\n  const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n      setLoadingNext(true);\r\n      setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n      loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [loadActivities, activityRegistry.size]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width='10'>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width='6'>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n})\r\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>\n                {props.label}\n            </label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default function LoginForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues = {{email: '', password: '', error: null}}\n            onSubmit = {(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}\n        >\n                {({handleSubmit, isSubmitting, errors}) => (\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                        <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\n                        <MyTextInput name='email' placeholder='Email' />\n                        <MyTextInput name='password' placeholder='Password' type='password' />\n                        <ErrorMessage \n                            name='error'\n                            render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\n                        />\n                        <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n\n                    </Form>\n                )}\n        </Formik>\n    )\n}","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props{\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props)\n{\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationsErrors';\n\nexport default function RegisterForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues = {{displayName: '', username: '', email: '', password: '', error: null}}\n            onSubmit = {(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required(),\n                username: Yup.string().required(),\n                email: Yup.string().required().email(),\n                password: Yup.string().required(),\n            })}\n        >\n                {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                    <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n                        <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\n                        <MyTextInput name='displayName' placeholder='Display Name' />\n                        <MyTextInput name='username' placeholder='Username' />\n                        <MyTextInput name='email' placeholder='Email' />\n                        <MyTextInput name='password' placeholder='Password' type='password' />\n                        <ErrorMessage\n                            name='error'\n                            render={() => \n                                <ValidationErrors errors={errors.error} />\n                            }\n                        />\n                        <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid />\n\n                    </Form>\n                )}\n        </Formik>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Header, Segment, Image } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign='center' vertical className='masthead'>\n            <Container text>\n                <Header as='h1' inverted>\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom:12}} />\n                    Reactivities\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                    <Header as='h2' inverted content='Welcome to Reactivities' />\n                    <Button as={Link} to='/activities' size='huge' inverted >\n                        Go to Activities\n                    </Button>\n                    </>\n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted >\n                            Login\n                        </Button>\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted >\n                            Register\n                        </Button>\n                    </>\n                )}\n                \n                \n            </Container>\n        </Segment>\n    )\n})","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true, content='loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>\n                {props.label}\n            </label>\n            <textarea {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>\n                {props.label}\n            </label>\n            <Select \n                clearable \n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Drinks', value: 'drinks'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Film', value: 'film'},\n    {text: 'Food', value: 'food'},\n    {text: 'Music', value: 'music'},\n    {text: 'Travel', value: 'travel'},\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\n\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    label?: string;\n}\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n    const [field, meta, helpers] = useField(props.name!);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <DatePicker\n                {...field}\n                {...props}\n                selected={(field.value && new Date(field.value) || null)}\n                onChange={value => helpers.setValue(value)}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Form,  Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport { history } from '../../../index';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivity,\r\n    loadingInitial,\r\n    createActivity,\r\n    updateActivity\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\nconst validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity Title is required'),\r\n    description: Yup.string().required('The activity Description is required'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('Date is required').nullable(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required()\r\n})\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => {\r\n                history.push(`/activities/${newActivity.id}`)\r\n            })\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n \r\n\r\n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal' />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n            <MyTextInput name='title' placeholder='title' />\r\n            <MyTextArea rows={3} placeholder='Description' name='description' />\r\n            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n            <MyDateInput \r\n                placeholderText='Date'\r\n                name='date' \r\n                showTimeSelect\r\n                timeCaption='time'\r\n                dateFormat='MMMM d, yyyyy h:mm aa'\r\n            />\r\n            <Header content='Location Details' sub color='teal' />\r\n            <MyTextInput placeholder='City' name='city' />\r\n            <MyTextInput placeholder='Venue' name='venue' />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated='right'\r\n              positive\r\n              type='submit'\r\n              content='Submit'\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to='/activities'\r\n              floated='right'\r\n              type='button'\r\n              content='Cancel'\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment,  Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from \"date-fns\";\n\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [activityId, commentStore]);\n\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: \"none\" }}\n        \n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n      <Formik\n            onSubmit={(values, { resetForm }) =>\n              commentStore.addComment(values).then(() => resetForm())\n            }\n            initialValues={{ body: \"\" }}\n            validationSchema={Yup.object({\n              body: Yup.string().required()\n            })}\n          >\n            {({ isSubmitting, isValid, handleSubmit }) => (\n              <Form className='ui form'>\n                <Field name='body'>\n                  {(props: FieldProps) => (\n                    <div style={{position: 'relative'}}>\n                      <Loader active={isSubmitting} />\n                      <textarea \n                        placeholder='Enter your comment (Enter to submit, SHIFT + Enter for new line)'\n                        rows={2}\n                        {...props.field}\n                        onKeyPress={\n                          e => {\n                            if (e.key === 'enter' && e.shiftKey) {\n                              return;\n                            }\n                            if (e.key === 'Enter' && !e.shiftKey) {\n                              e.preventDefault();\n                              isValid && handleSubmit();\n                            }\n                          }\n                        }\n                       />\n                    </div>\n                  )}\n                </Field>\n              </Form>\n            )}\n          </Formik>\n\n          \n        <Comment.Group>\n          {commentStore.comments.map(comment => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.username}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n          \n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled && \n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top:20}}\n                        ribbon color='red' content='Cancelled' />\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                    <Button color={activity.isCancelled ? 'green' : 'red'}\n                        floated='left'\n                        basic\n                        content={activity.isCancelled ? 'Re-activate activity' : 'Cancel activity'}\n                        onClick={cancelActivityToggle}\n                        loading={loading} />\n                    <Button disabled={activity.isCancelled} as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\n                        Manage Event\n                    </Button>\n                    </>\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button disabled={activity.isCancelled} loading={loading} onClick={updateAttendance} color='teal'>Join Activity</Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/activity'\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}} : Props) {\n    if (!attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n               {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} Going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item key={attendee.username} style={{ position: 'relative' }}>\n                            {attendee.username === host?.username && \n                             <Label\n                                style={{ position: 'absolute' }}\n                                color='orange'\n                                ribbon='right'\n                            >\n                                Host\n                            </Label>\n                            }\n                           \n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Item.Header as='h3'>\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                                </Item.Header>\n                                {attendee.following && \n                                    <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\n                                }\n                                \n                            </Item.Content>\n                        </Item>\n                    ))}\n                    \n                </List>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const {activityStore} = useStore();\r\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n  \r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n        \r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n      \r\n    </Grid>\r\n  );\r\n})\r\n","import React from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationsErrors';\nimport { useState } from 'react';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n            <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}","import React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details && \n                <Segment>\n                    <Header as='h4' content='Stack trace' color='teal' />\n                    <code style={{marginTop: '10px'}}>\n                        {commonStore.error.details}\n                    </code>\n                </Segment>\n            }\n        </Container>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n})","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className='ui form'>\n          <MyTextInput placeholder='Display Name' name='displayName' />\n          <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n          <Button\n            positive\n            type='submit'\n            loading={isSubmitting}\n            content='Update profile'\n            floated='right'\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React, { useState } from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from \"mobx-react-lite\";\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header\n            floated='left'\n            icon='user'\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities,\n  } = profileStore;\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                <Header floated='left' icon='user' content={activeTab===3?`People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n                \r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css'\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n    return (\n        <Cropper\n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n    setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles} : Props) {\n    const dzStyles = {\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        textAlign: 'center' as 'center',\n        height: 200\n    }\n    const dzActive = {\n        borderColor: 'green'\n    }\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n      \n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    }\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header color='teal' content='Step 1 - Add Photo' />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color='teal' content='Step 2 - Resize Photo' />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color='teal' content='Step 3 - Preview & upload' />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className='img-preview'\n              style={{ minHeight: 200, overflow: 'hidden' }}\n            />\n            <Button.Group>\n              <Button loading={loading} onClick={onCrop} positive icon='check' />\n              <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Card, Header, Tab, Image, Grid, Button } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({profile} : Props) {\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n    const [addPhotoMode , setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    \n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='image' content='Photos' />\n                    {isCurrentUser && (\n                        <Button \n                            floated='right' \n                            basic \n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                            onClick={() => setAddPhotoMode(!addPhotoMode)} \n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n                    ) : (\n                        <Card.Group itemsPerRow={5}>\n                            {profile.photos?.map(photo => (\n                                <Card key={photo.id}>\n                                    <Image src={photo.url} />\n                                    {isCurrentUser && \n                                        <Button.Group fluid widths={2}>\n                                            <Button \n                                                basic \n                                                color = 'green'\n                                                content='Main'\n                                                name={photo.id}\n                                                disabled={photo.isMain}\n                                                loading={target === 'main' + photo.id && loading}\n                                                onClick={e => handleSetMainPhoto(photo, e)}\n                                            />\n                                            <Button \n                                                basic\n                                                color='red'\n                                                icon='trash'\n                                                name={photo.id}\n                                                loading={target ===  photo.id && loading}\n                                                onClick={e => handleDeletePhoto(photo, e)}\n                                                disabled={photo.isMain}\n                                            />\n                                        </Button.Group>\n                                    }\n                                </Card>\n                            ))}\n                        </Card.Group>\n                    )}\n\n                </Grid.Column>\n            </Grid>\n            \n            \n        </Tab.Pane>\n    )\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\n\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const {profileStore} = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition='right'\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport {  Divider, Grid, Header, Item,  Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile} : Props) {\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={12}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Header as='h1' content={profile.displayName} />\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n                \n                    <Grid.Column width={4}>\n                        <Statistic.Group widths={2}>\n                            <Statistic label='Followers' value={profile.followersCount} />\n                            <Statistic label='Following' value={profile.followingCount} />\n                        </Statistic.Group>\n                        <Divider />\n                        <FollowButton profile={profile} />\n                    </Grid.Column>\n                \n                </Grid>\n        </Segment>\n    )\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage () {\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab]);\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                \r\n                { profile && \r\n                <>\r\n                    <ProfileHeader profile={profile} />\r\n                    <ProfileContent profile={profile} />\r\n                </>\r\n                }\r\n               \r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest} : Props) {\n    const {userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route\n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n        />\n    )\n}","import React, { Fragment, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/Activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/Activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/Activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <Fragment>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route \n        path={'/(.+)'}\n        render={() => (\n          <Fragment>\n          <NavBar />\n                <Container style={{ marginTop: \"7em\" }}>\n                  <Switch>\n                    <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                    <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                    <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                    <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                    <PrivateRoute path='/errors' component={TestErrors} />\n                    <Route path='/server-error' component={ServerError} />\n                    <Route component={NotFound} />\n                  </Switch>\n                  \n                </Container>\n          </Fragment>\n        )}\n      />\n      \n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/style.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport {  Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}